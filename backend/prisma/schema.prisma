// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}







datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id          String    @id @default(uuid())
  name        String
  email       String    @unique
  password    String
  phoneNumber String?   @unique
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  orders      Order[]
  cart        CartItem[]
}

model CartItem {
  id        String   @id @default(uuid())
  userId    String
  menuItemId String
  quantity  Int      @default(1)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Order {
  id            String      @id @default(uuid())
  userId        String
  total         Float
  status        OrderStatus @default(PENDING)
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  user          User        @relation(fields: [userId], references: [id])
  orderItems    OrderItem[]
}

model OrderItem {
  id          String   @id @default(uuid())
  orderId     String
  menuItemId  String
  name        String   
  price       Float
  quantity    Int
  order       Order    @relation(fields: [orderId], references: [id], onDelete: Cascade)
}

enum OrderStatus {
  PENDING
  PREPARING
  READY
  COMPLETED
  CANCELLED
}